using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace TestProtocolWorkLib
{
    public static class EventCategory
    {
        [Flags]
        public enum EventCategories
        {
            None = 0,
            Intruder = 1,
            SecurityDevices = 2,
            Operator = 4,
            Guards = 8,
            IntruderGuards = Intruder | Guards,
            SecurityDevicesOperator = SecurityDevices | Operator
        }

        public static readonly Dictionary<string, EventCategories> EventsCategoriesDictionary = new()
        {
            { "VisionRangeEvent", EventCategories.None },
            { "CaptureRadiusEvent", EventCategories.None },
            { "EntranceToZoneEvent", EventCategories.Intruder },
            { "ExitFromZoneEvent", EventCategories.Intruder },
            { "ReduceDetSensWeatherEvent", EventCategories.None },
            { "ReduceDetSensPartnerEvent", EventCategories.None },
            { "SignResetEvent", EventCategories.None },
            { "MovToPointEvent", EventCategories.None },
            { "SpecZoneNotAffVehEvent", EventCategories.None },
            { "SpecZoneAffVehEvent", EventCategories.None },
            { "SpeedLimitToEvent", EventCategories.None },
            { "SpeedMaxEvent", EventCategories.None },
            { "SpeedValueEvent", EventCategories.None },
            { "GetMarkingEvent", EventCategories.None },
            { "AssSitEvent", EventCategories.None },
            { "MoveToLastPointEvent", EventCategories.None },
            { "IntruderVisThroughEvent", EventCategories.None },
            { "InterceptStartEvent", EventCategories.None },
            { "SwitchingTo", EventCategories.None },
            { "VisContRestEvent", EventCategories.None },
            { "TimeGatheringEvent", EventCategories.None },
            { "MovToTargetEvent", EventCategories.None },
            { "RuMovStartInterceptEvent", EventCategories.None },
            { "RuMovInterceptEvent", EventCategories.None },
            { "LeadAngleChangedEvent", EventCategories.None },
            { "MarkingIgnEvent", EventCategories.None },
            { "CoordMeasurEvent", EventCategories.None },
            { "SignIssuedEvent", EventCategories.None },
            { "DetNotWorkEvent", EventCategories.None },
            { "FalseAlarmBackgrEvent", EventCategories.None },
            { "FalseAlarmWeatherEvent", EventCategories.None },
            { "RecogProbChangedEvent", EventCategories.None },
            { "MarkingForRuEvent", EventCategories.None },
            { "InspBeginEvent", EventCategories.None },
            { "InspEndEvent", EventCategories.None },
            { "ImgEvalStartEvent", EventCategories.None },
            { "IntruderFoundInCamZoneEvent", EventCategories.None },
            { "CamManualEvent", EventCategories.None },
            { "SwToCamSetEvent", EventCategories.None },
            { "ImgEvalEndEvent", EventCategories.None },
            { "NoDetectEvent", EventCategories.None },
            { "CamAutoEvent", EventCategories.None },
            { "MoveEvent", EventCategories.None },
            { "MoveToIntEvent", EventCategories.None },
            { "MoveToTargEvent", EventCategories.None },
            { "TargSuppEvent", EventCategories.None },
            { "MoveRuEvent", EventCategories.None },
            { "IntruderDetRuEvent", EventCategories.None },
            { "FalseDetectionEvent", EventCategories.None },
            { "AlarmEvent", EventCategories.None },
            { "TimeDetermAreaEvent", EventCategories.None },
            { "AreaDetermEvent", EventCategories.None },
            { "TimeAreaInspectEvent", EventCategories.None },
            { "AreaInspectEvent", EventCategories.None },
            { "TimeDecisionEvent", EventCategories.None },
            { "SignAcceptEvent", EventCategories.None },
            { "FalseAlarmEvent", EventCategories.None },
            { "AreaOutOfCamEvent", EventCategories.None },
            { "SpeedIncEvent", EventCategories.None },
            { "SpeedDecEvent", EventCategories.None },
            { "SpeedIncVehEvent", EventCategories.None },
            { "SpeedDecEquipEvent", EventCategories.None },
            { "RamOvercomeEvent", EventCategories.None },
            { "ImpossOvercomeEvent", EventCategories.None },
            { "BarrierOverBeginEvent", EventCategories.None },
            { "BarrierOverEndEvent", EventCategories.None },
            { "BarrierOverMiddleEvent", EventCategories.None },
            { "HurdleEntryBeginEvent", EventCategories.None },
            { "HurdleEntryEndEvent", EventCategories.None },
            { "HurdleExitBeginEvent", EventCategories.None },
            { "HurdleExitEndEvent", EventCategories.None },
            { "RuStartEvent", EventCategories.None },
            { "EndPointPatrolEvent", EventCategories.None },
            { "ContinuePatrolEvent", EventCategories.None },
            { "BeginPatrolEvent", EventCategories.None },
            { "VehAbandEvent", EventCategories.None },
            { "HeavyEquipAbandEvent", EventCategories.None },
            { "MediumEquipAband", EventCategories.None },
            { "EasyEquipAbandEvent", EventCategories.None },
            { "VisContactEvent", EventCategories.None },
            { "NonPenetEvent", EventCategories.None },
            { "ReducedCautionEvent", EventCategories.None },
            { "DirectionChangedEvent", EventCategories.None },
            { "DevEndEvent", EventCategories.None },
            { "ContinMoveEvent", EventCategories.None },
            { "PenetrationEvent", EventCategories.None },
            { "IntruderNeutralizedEvent", EventCategories.None },
            { "ExtSecurityCall", EventCategories.None },
            { "EstimatedArrivalTime", EventCategories.None },
            { "ExtSecurityArrival", EventCategories.None },
        };
    }
}
